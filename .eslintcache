<<<<<<< HEAD
[{"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/index.js":"1","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/App.js":"2","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/reportWebVitals.js":"3","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/404.js":"4","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/NavBar.js":"5","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Sidebar.js":"6","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/SignIn.js":"7","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/About.js":"8","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/SignUp.js":"9","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Contact.js":"10","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Footer.js":"11","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/JoinOrganisation.js":"12","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Blog.js":"13","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/EditOrganisation.js":"14","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/EditProfile.js":"15","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Events.js":"16","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/History.js":"17","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Settings.js":"18","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/ShowErrors.js":"19","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/SearchResults.js":"20","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Organisation.js":"21"},{"size":500,"mtime":1611563784548,"results":"22","hashOfConfig":"23"},{"size":4640,"mtime":1612744143780,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1611528994181,"results":"25","hashOfConfig":"23"},{"size":213,"mtime":1611620342571,"results":"26","hashOfConfig":"23"},{"size":1078,"mtime":1612083783787,"results":"27","hashOfConfig":"23"},{"size":4311,"mtime":1612500442618,"results":"28","hashOfConfig":"23"},{"size":4988,"mtime":1612485106651,"results":"29","hashOfConfig":"23"},{"size":4499,"mtime":1612502042407,"results":"30","hashOfConfig":"23"},{"size":5256,"mtime":1612502104055,"results":"31","hashOfConfig":"23"},{"size":123,"mtime":1611618510827,"results":"32","hashOfConfig":"23"},{"size":937,"mtime":1612087189727,"results":"33","hashOfConfig":"23"},{"size":7972,"mtime":1612742364279,"results":"34","hashOfConfig":"23"},{"size":117,"mtime":1611618499071,"results":"35","hashOfConfig":"23"},{"size":10670,"mtime":1612500295917,"results":"36","hashOfConfig":"23"},{"size":10610,"mtime":1612499820529,"results":"37","hashOfConfig":"23"},{"size":145,"mtime":1612423625553,"results":"38","hashOfConfig":"23"},{"size":153,"mtime":1612423666193,"results":"39","hashOfConfig":"23"},{"size":115,"mtime":1611717029358,"results":"40","hashOfConfig":"23"},{"size":496,"mtime":1612502518979,"results":"41","hashOfConfig":"23"},{"size":6131,"mtime":1612680382771,"results":"42","hashOfConfig":"23"},{"size":167,"mtime":1612741992279,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"p8ynpl",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/index.js",[],["89","90"],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/App.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/reportWebVitals.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/404.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/NavBar.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Sidebar.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/SignIn.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/About.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/SignUp.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Contact.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Footer.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/JoinOrganisation.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Blog.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/EditOrganisation.js",["91"],"import React, { useState } from 'react';\n\n// Token Request\nimport axios from 'axios';\n\n// Components\nimport ShowErrors from './ShowErrors';\n\n// Styling\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { DropzoneArea } from 'material-ui-dropzone';\n\n// Images\nimport Banner from '../assets/modal-org-splash.jpg';\n\n// Custom styling that overrides Material UI defaults\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    borderRadius: '15px',\n    width: '70vw',\n    height: '95vh',\n    boxShadow: theme.shadows[5],\n  },\n  banner: {\n    width: '100%',\n    maxHeight: '250px',\n    overflow: 'hidden',\n    padding: '0',\n    borderRadius: '12px 12px 0 0',\n  },\n  modaladdress: {\n    backgroundColor: 'rgba(78, 197, 230, 0.20)',\n    height: '100%',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function EditOrganisation() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [values, setValues] = useState({\n    organization_name: '',\n    description: '',\n    address_line_1: '',\n    address_line_2: '',\n    city: '',\n    state: '',\n    postcode: '',\n    country: '',\n    phone: '',\n    email: '',\n    image: '',\n    providers: '',\n    errors: ''\n  });\n\n  // Sets values\n  const handleInputChange = (e) => {\n    const {name, value} = e.target\n    setValues({...values, [name]: value})\n  };\n\n  const handleSubmit = () => {\n    axios.post('http://localhost:3001/organisation/edit', {values}, {withCredentials: true})\n    .then(response => {\n      if (response.data.updated) {\n\n      } else {\n        setValues({...values, [values.errors]: response.data.errors})\n      }\n    })\n    .catch(error => console.log('api errors:', error))\n  };\n\n  // Opens the modal\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  // Closes the modal\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"curved-container\">\n      <h1>Edit Organization</h1>\n\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <Grid container spacing={2} justify=\"center\">\n\n          {/* Title & Description */}\n          <Grid item xs={10}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Organisation Name\"\n              name=\"organization_name\"\n              value={values.organization_name}\n              onChange={handleInputChange}\n              InputProps={{\n                  style: {\n                    backgroundColor: \"white\"\n                  },\n              }}\n            />\n          </Grid>\n          <Grid item xs={10}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              multiline\n              rows={4}\n              label=\"Organisation Description\"\n              name=\"description\"\n              value={values.description}\n              onChange={handleInputChange}\n              InputProps={{\n                  style: {\n                    backgroundColor: \"white\"\n                  },\n              }}\n            />\n          </Grid>\n\n          {/* Address */}\n          <Grid item xs={10}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Address Line 1\"\n              name=\"address1\"\n              value={values.address_line_1}\n              onChange={handleInputChange}\n              InputProps={{\n                  style: {\n                    backgroundColor: \"white\"\n                  },\n              }}\n            />\n          </Grid>\n          <Grid item xs={10}>\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              label=\"Address Line 2\"\n              name=\"address2\"\n              value={values.address_line_2}\n              onChange={handleInputChange}\n              InputProps={{\n                  style: {\n                    backgroundColor: \"white\"\n                  },\n              }}\n            />\n          </Grid>\n          <Grid item xs={10}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"City\"\n              name=\"city\"\n              value={values.city}\n              onChange={handleInputChange}\n              InputProps={{\n                  style: {\n                    backgroundColor: \"white\"\n                  },\n              }}\n            />\n          </Grid>\n          <Grid item xs={5}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"State/Province\"\n              name=\"state\"\n              value={values.state}\n              onChange={handleInputChange}\n              InputProps={{\n                  style: {\n                    backgroundColor: \"white\"\n                  },\n              }}\n            />\n          </Grid>\n          <Grid item xs={5}>\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              label=\"Postcode\"\n              name=\"postcode\"\n              value={values.postcode}\n              onChange={handleInputChange}\n              InputProps={{\n                  style: {\n                    backgroundColor: \"white\"\n                  },\n              }}\n            />\n          </Grid>\n          <Grid item xs={10}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Country\"\n              name=\"country\"\n              value={values.country}\n              onChange={handleInputChange}\n              InputProps={{\n                  style: {\n                    backgroundColor: \"white\"\n                  },\n              }}\n            />\n          </Grid>\n\n          {/* Contact */}\n          <Grid item xs={10}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Telephone No.\"\n              name=\"telephone\"\n              value={values.phone}\n              onChange={handleInputChange}\n              InputProps={{\n                  style: {\n                    backgroundColor: \"white\"\n                  },\n              }}\n            />\n          </Grid>\n          <Grid item xs={10}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Email Address\"\n              name=\"email\"\n              value={values.email}\n              onChange={handleInputChange}\n              InputProps={{\n                  style: {\n                    backgroundColor: \"white\"\n                  },\n              }}\n            />\n          </Grid>\n          {/* Banner Image */}\n          <Grid item xs={10}>\n          {/* <DropzoneArea\n            name=\"image\"\n            acceptedFiles={['image/*']}\n            dropzoneText={\"Upload a banner image. Drag and drop an image here or click\"}\n            onChange={handleInputChange}\n          /> */}\n          </Grid>\n\n          <h1>Manage Providers</h1>\n\n          {/* TODO All the logic for bring up associated providers, adding and deleting them */}\n        \n          {/* Buttons */}\n          <Grid item xs={10}>\n            <Button \n              type=\"submit\"\n              label=\"Save\"\n              variant=\"contained\"\n              onClick={classes.submit}\n            >\n              Save\n            </Button>\n            <Button \n              type=\"reset\"\n              label=\"Reset\"\n              variant=\"contained\"\n              onClick={classes.reset}\n            >\n              Reset\n            </Button>\n            <Button \n              type=\"button\" \n              variant=\"contained\"\n              onClick={handleOpen}\n            >\n              Show Customer View\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n\n      {/* Show Customer View Modal */}\n      {/* TODO Move this to a component? */}\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Grid spacing={2} >\n              {/* Banner image */}\n              <Grid xs={12}>\n                <img src={Banner} alt=\"org banner\" className={classes.banner}></img>\n              </Grid>\n              {/* Left container */}\n              <Grid item xs={4} className={classes.modaladdress}>\n                {/* Google Maps */}\n                {/* TODO Get the api working */}\n                <iframe\n                  title=\"Organisation Location\"\n                  width=\"100%\"\n                  height=\"100%\"\n                  frameborder=\"0\"\n                  src=\"https://www.google.com/maps/embed/v1/place?key=AIzaSyDsw_-i9Nf1d77G0BBtsNT6TIbPk2tHEZQ\n                    &q={values.address_line_1}\">\n                </iframe>\n                <ul className=\"org-modal\">\n                  <li>Address Line 1: {values.address_line_1}</li>\n                  <li>Address Line 2: {values.address_line_2}</li>\n                  <li>City: {values.city}</li>\n                  <li>State/Province: {values.state}</li>\n                  <li>Postcode: {values.postcode}</li>\n                  <li>Country: {values.country}</li>\n                  <li>Telephone No.: {values.phone}</li>\n                  <li>Email Address: <a href={\"mailto:\" + values.email}>{values.email}</a></li>\n                </ul>\n              </Grid>\n              {/* Right container */}\n              <Grid item xs={8}>\n                <h1>{values.organization_name}</h1>\n                <p>{values.description}</p>\n                <strong>Providers</strong>\n                <Grid container spacing={3}>\n                 {/* Provider org cards */}\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n      <ShowErrors errors={values.errors} />\n    </div>\n  );\n}","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/EditProfile.js",["92"],"import React, { useState } from 'react'\n\n// Token Request\nimport axios from 'axios';\n\n// Components\nimport ShowErrors from './ShowErrors';\n\n// Styling\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\n// Custom styling that overrides Material UI defaults\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(2, 0, 3),\n    },\n  }));\n\nexport default function EditProfile() {\n    const classes = useStyles();\n\n    const [values, setValues] = useState({\n        first_name: '',\n        last_name: '',\n        mobile: '',\n        email: '',\n        address_line_1: '',\n        address_line_2: '',\n        city: '',\n        state: '',\n        country: '',\n        postcode: '',\n        errors: ''\n    });\n\n      // Sets values\n    const handleInputChange = (e) => {\n        const {name, value} = e.target\n        setValues({...values, [name]: value})\n    };\n\n    const handleSubmit = (event) => {\n        // Do not re-render on submit\n        event.preventDefault()\n\n        let profile = {\n            first_name: values.first_name,\n            last_name: values.last_name,\n            mobile: values.mobile,\n            email: values.email,\n            address_line_1: values.address_line_1,\n            address_line_2: values.address_line_2,\n            city: values.city,\n            state: values.state,\n            country: values.country,\n            postcode: values.postcode\n        }\n    \n        // Create a POST request to update profile\n        axios.post('http://localhost:3001/profile', {profile}, {withCredentials: true})\n        .then(response => {\n            if (response.data.updated) {\n                setValues(response.data)\n            } else {\n                setValues({...values, [values.errors]: response.data.errors})\n            }\n        })\n        .catch(error => console.log('api errors:', error))\n    };\n\n\n    return (\n        <div className=\"curved-container\">\n            <h1>Edit Profile</h1>\n\n            <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                <Grid container spacing={2} justify=\"center\">\n\n                    <Grid item xs={5}>\n                        <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        label=\"First Name\"\n                        name=\"first_name\"\n                        value={values.first_name}\n                        onChange={handleInputChange}\n                        InputProps={{\n                            style: {\n                                backgroundColor: \"white\"\n                            },\n                        }}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        label=\"Last Name\"\n                        name=\"last_name\"\n                        value={values.last_name}\n                        onChange={handleInputChange}\n                        InputProps={{\n                            style: {\n                                backgroundColor: \"white\"\n                            },\n                        }}\n                        />\n                    </Grid>\n                    <Grid item xs={10}>\n                        <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        label=\"Mobile No.\"\n                        name=\"mobile\"\n                        value={values.mobile}\n                        onChange={handleInputChange}\n                        InputProps={{\n                            style: {\n                                backgroundColor: \"white\"\n                            },\n                        }}\n                        />\n                    </Grid>\n                    <Grid item xs={10}>\n                        <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        InputProps={{\n                            style: {\n                                backgroundColor: \"white\"\n                            },\n                        }}\n                        />\n                    </Grid>\n                    <Grid item xs={10}>\n                        <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        label=\"Address Line 1\"\n                        name=\"address1\"\n                        value={values.address_line_1}\n                        onChange={handleInputChange}\n                        InputProps={{\n                            style: {\n                                backgroundColor: \"white\"\n                            },\n                        }}\n                        />\n                    </Grid>\n                    <Grid item xs={10}>\n                        <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        label=\"Address Line 2\"\n                        name=\"address2\"\n                        value={values.address_line_2}\n                        onChange={handleInputChange}\n                        InputProps={{\n                            style: {\n                                backgroundColor: \"white\"\n                            },\n                        }}\n                        />\n                    </Grid>\n                    <Grid item xs={10}>\n                        <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        label=\"City\"\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleInputChange}\n                        InputProps={{\n                            style: {\n                                backgroundColor: \"white\"\n                            },\n                        }}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        label=\"State/Province\"\n                        name=\"state\"\n                        value={values.state}\n                        onChange={handleInputChange}\n                        InputProps={{\n                            style: {\n                                backgroundColor: \"white\"\n                            },\n                        }}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        label=\"Postcode\"\n                        name=\"postcode\"\n                        value={values.postcode}\n                        onChange={handleInputChange}\n                        InputProps={{\n                            style: {\n                                backgroundColor: \"white\"\n                            },\n                        }}\n                        />\n                    </Grid>\n                    <Grid item xs={10}>\n                        <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        label=\"Country\"\n                        name=\"country\"\n                        value={values.country}\n                        onChange={handleInputChange}\n                        InputProps={{\n                            style: {\n                                backgroundColor: \"white\"\n                            },\n                        }}\n                        />\n                    </Grid>\n\n                    {/* Contact */}\n                    <Grid item xs={10}>\n                        <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        label=\"Telephone No.\"\n                        name=\"telephone\"\n                        value={values.phone}\n                        onChange={handleInputChange}\n                        InputProps={{\n                            style: {\n                                backgroundColor: \"white\"\n                            },\n                        }}\n                        />\n                    </Grid>\n                    <Grid item xs={10}>\n                        <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        InputProps={{\n                            style: {\n                                backgroundColor: \"white\"\n                            },\n                        }}\n                        />\n                    </Grid>\n\n                    {/* Buttons */}\n                    <Grid item xs={10}>\n                        <Button \n                        type=\"submit\"\n                        label=\"Save\"\n                        variant=\"contained\"\n                        onClick={classes.submit}\n                        >\n                        Save\n                        </Button>\n                        <Button \n                        type=\"reset\"\n                        label=\"Reset\"\n                        variant=\"contained\"\n                        onClick={classes.reset}\n                        >\n                        Reset\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n            <ShowErrors errors={values.errors} />\n        </div>\n    );\n}","/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Events.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/History.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Settings.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/ShowErrors.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/SearchResults.js",[],"/home/alex/Documents/Assignments/Term 3/Assignment 2/appointment-now_front-end/src/components/Organisation.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":17,"column":10,"nodeType":"99","messageId":"100","endLine":17,"endColumn":22},{"ruleId":"97","severity":1,"message":"101","line":14,"column":8,"nodeType":"99","messageId":"100","endLine":14,"endColumn":17},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'DropzoneArea' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"/home/work/Desktop/appointment-now_front-end/src/index.js":"1","/home/work/Desktop/appointment-now_front-end/src/reportWebVitals.js":"2","/home/work/Desktop/appointment-now_front-end/src/App.js":"3","/home/work/Desktop/appointment-now_front-end/src/components/404.js":"4","/home/work/Desktop/appointment-now_front-end/src/components/NavBar.js":"5","/home/work/Desktop/appointment-now_front-end/src/components/Footer.js":"6","/home/work/Desktop/appointment-now_front-end/src/components/Sidebar.js":"7","/home/work/Desktop/appointment-now_front-end/src/components/About.js":"8","/home/work/Desktop/appointment-now_front-end/src/components/Blog.js":"9","/home/work/Desktop/appointment-now_front-end/src/components/Contact.js":"10","/home/work/Desktop/appointment-now_front-end/src/components/SignUp.js":"11","/home/work/Desktop/appointment-now_front-end/src/components/SignIn.js":"12","/home/work/Desktop/appointment-now_front-end/src/components/Events.js":"13","/home/work/Desktop/appointment-now_front-end/src/components/EditProfile.js":"14","/home/work/Desktop/appointment-now_front-end/src/components/JoinOrganisation.js":"15","/home/work/Desktop/appointment-now_front-end/src/components/EditOrganisation.js":"16"},{"size":500,"mtime":1612497287430,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1612497287430,"results":"19","hashOfConfig":"18"},{"size":3502,"mtime":1612497287426,"results":"20","hashOfConfig":"18"},{"size":213,"mtime":1612497287430,"results":"21","hashOfConfig":"18"},{"size":1078,"mtime":1612497287430,"results":"22","hashOfConfig":"18"},{"size":937,"mtime":1612497287430,"results":"23","hashOfConfig":"18"},{"size":4391,"mtime":1612497287430,"results":"24","hashOfConfig":"18"},{"size":4412,"mtime":1612497287430,"results":"25","hashOfConfig":"18"},{"size":117,"mtime":1612497287430,"results":"26","hashOfConfig":"18"},{"size":123,"mtime":1612497287430,"results":"27","hashOfConfig":"18"},{"size":5598,"mtime":1612499921745,"results":"28","hashOfConfig":"18"},{"size":5295,"mtime":1612497914609,"results":"29","hashOfConfig":"18"},{"size":113,"mtime":1612497287430,"results":"30","hashOfConfig":"18"},{"size":118,"mtime":1612497287430,"results":"31","hashOfConfig":"18"},{"size":8088,"mtime":1612497287430,"results":"32","hashOfConfig":"18"},{"size":10722,"mtime":1612497287430,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6kbnc1",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/work/Desktop/appointment-now_front-end/src/index.js",[],"/home/work/Desktop/appointment-now_front-end/src/reportWebVitals.js",[],"/home/work/Desktop/appointment-now_front-end/src/App.js",[],"/home/work/Desktop/appointment-now_front-end/src/components/404.js",[],"/home/work/Desktop/appointment-now_front-end/src/components/NavBar.js",[],"/home/work/Desktop/appointment-now_front-end/src/components/Footer.js",[],"/home/work/Desktop/appointment-now_front-end/src/components/Sidebar.js",[],"/home/work/Desktop/appointment-now_front-end/src/components/About.js",[],"/home/work/Desktop/appointment-now_front-end/src/components/Blog.js",[],"/home/work/Desktop/appointment-now_front-end/src/components/Contact.js",[],"/home/work/Desktop/appointment-now_front-end/src/components/SignUp.js",[],"/home/work/Desktop/appointment-now_front-end/src/components/SignIn.js",[],"/home/work/Desktop/appointment-now_front-end/src/components/Events.js",[],"/home/work/Desktop/appointment-now_front-end/src/components/EditProfile.js",[],"/home/work/Desktop/appointment-now_front-end/src/components/JoinOrganisation.js",["66","67"],"/home/work/Desktop/appointment-now_front-end/src/components/EditOrganisation.js",[],{"ruleId":"68","severity":1,"message":"69","line":44,"column":12,"nodeType":"70","messageId":"71","endLine":44,"endColumn":28},{"ruleId":"68","severity":1,"message":"72","line":45,"column":20,"nodeType":"70","messageId":"71","endLine":45,"endColumn":29},"no-unused-vars","'nameSearchResult' is assigned a value but never used.","Identifier","unusedVar","'setNameID' is assigned a value but never used."]
>>>>>>> more testing updates
